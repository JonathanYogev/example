name: Server CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'server/**'
      - 'charts/server-chart/**'
  pull_request:
    branches:
      - main
    paths:
      - 'server/**'
      - 'charts/server-chart/**'

env:
  AWS_REGION: il-central-1
  ECR_SERVER_REPO: 370924438764.dkr.ecr.il-central-1.amazonaws.com/practice-project-server
  EKS_CLUSTER_NAME: practice-cluster
  KUBECTL_VERSION: 'v1.32.0'
  HELM_VERSION: 'v3.14.0'
  IMAGE_TAG: ${{ github.sha }}

jobs:
  lint-and-test-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Server Dependencies
        run: cd server && npm install

      - name: Run Server Tests
        run: cd server && npm test

  build-and-push-server:
    runs-on: ubuntu-latest
    needs: lint-and-test-server
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Server Docker image
        run: |
          docker buildx build \
            --cache-from=type=registry,ref=${{ env.ECR_SERVER_REPO }}:buildcache \
            --cache-to=type=registry,ref=${{ env.ECR_SERVER_REPO }}:buildcache,mode=max \
            --tag ${{ env.ECR_SERVER_REPO }}:${{ env.IMAGE_TAG }} \
            --push ./server

  deploy-staging-server:
    runs-on: ubuntu-latest
    needs: build-and-push-server
    environment:
      name: staging
      url: # Will be set by Ingress later
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: ${{ env.KUBECTL_VERSION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Helm Lint Server Chart
        run: helm lint ./charts/server-chart

      - name: Helm Template Server Chart
        run: helm template staging-server ./charts/server-chart --namespace staging --set image.tag=${{ env.IMAGE_TAG }}

      - name: Deploy Server to Staging
        run: helm upgrade --install staging-server ./charts/server-chart --namespace staging --set image.tag=${{ env.IMAGE_TAG }} --wait
